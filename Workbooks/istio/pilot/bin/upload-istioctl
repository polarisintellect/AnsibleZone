#!/bin/bash
# Copyright 2017 Istio Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

# bazel's go_binary cross-compilation isn't ready (see
# github.com/bazelbuild/rules_go/issues/70). Use normal golang toolchain to
# cross compile istioctl for windows and osx.

set -o errexit
set -o nounset
set -o pipefail
set -x

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)"
DIR_NAME="$(basename ${ROOT})"
BIN_DIR='.'
BUCKET_PATH=''
RELEASE=false
OUTPUT_DIR=""

function cleanup {
  rm -rf "${BIN_DIR}"
}

cd $ROOT
while getopts :o:p:r arg; do
  case ${arg} in
    o) OUTPUT_DIR="${OPTARG}"
       BIN_DIR="$(mktemp -d /tmp/istioctl.XXXX)"
       ;;
    p)
      BUCKET_PATH="${OPTARG}"
      BIN_DIR="$(mktemp -d /tmp/istioctl.XXXX)"
      ;;
    r) RELEASE=true;;
    *) error_exit "Unrecognized argument -${OPTARG}";;
  esac
done

[[ "${BIN_DIR}" != '.' ]] && trap cleanup exit

GOBUILD="${ROOT}/../bin/gobuild.sh"
VERSION_PACKAGE=istio.io/istio/pilot/tools/version

STATIC=0 GOOS=linux ${GOBUILD} "${BIN_DIR}/istioctl-linux" ${VERSION_PACKAGE} istio.io/istio/pilot/cmd/istioctl

if [[ ${RELEASE} == true ]]; then
  STATIC=0 GOOS=darwin ${GOBUILD} "${BIN_DIR}/istioctl-osx" ${VERSION_PACKAGE} istio.io/istio/pilot/cmd/istioctl
  STATIC=0 GOOS=windows ${GOBUILD} "${BIN_DIR}/istioctl-win.exe" ${VERSION_PACKAGE} istio.io/istio/pilot/cmd/istioctl
fi

if [[ -n "${BUCKET_PATH}" ]]; then
  gsutil -m cp -r "${BIN_DIR}"/istioctl-* "${BUCKET_PATH}/" \
    || { echo "Failed to upload binaries to ${BUCKET_PATH}"; exit 1; }
fi

if [[ "${OUTPUT_DIR}" != "" ]]; then
  cp "${BIN_DIR}"/istioctl-* "${OUTPUT_DIR}/"
fi
